// === Pines sensores ===
#define TRIG_FRONT  4
#define ECHO_FRONT  5
#define TRIG_BACK   18
#define ECHO_BACK   19
#define TRIG_LEFT   21
#define ECHO_LEFT   22
#define TRIG_RIGHT  25
#define ECHO_RIGHT  26

// === Pin del módulo de vibración (elige un GPIO de salida) ===
#define PIN_VIB     23   // cambia a tu GPIO "MODVIB" real (evita 34–39)

// === Constantes ===
#define SOUND_SPEED   0.034   // cm/us
#define OBSTACLE_LIMIT 20     // cm
#define INTER_PING_MS  70     // separación entre sensores para evitar diafonía

float medirDistancia(int trigPin, int echoPin) {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  long duracion = pulseIn(echoPin, HIGH, 30000); // 30 ms
  if (duracion == 0) return 400.0;               // timeout => fuera de rango
  float distancia = duracion * SOUND_SPEED * 0.5;
  if (distancia > 400) distancia = 400;
  return distancia;
}

void setup() {
  Serial.begin(115200);

  pinMode(TRIG_FRONT, OUTPUT);  pinMode(ECHO_FRONT, INPUT);
  pinMode(TRIG_BACK,  OUTPUT);  pinMode(ECHO_BACK,  INPUT);
  pinMode(TRIG_LEFT,  OUTPUT);  pinMode(ECHO_LEFT,  INPUT);
  pinMode(TRIG_RIGHT, OUTPUT);  pinMode(ECHO_RIGHT, INPUT);

  pinMode(PIN_VIB, OUTPUT);
  digitalWrite(PIN_VIB, LOW);

  Serial.println("=== Sistema de detección de obstáculos iniciado ===");
}

void loop() {
  float dFront = medirDistancia(TRIG_FRONT, ECHO_FRONT);
  delay(INTER_PING_MS);
  float dBack  = medirDistancia(TRIG_BACK,  ECHO_BACK);
  delay(INTER_PING_MS);
  float dLeft  = medirDistancia(TRIG_LEFT,  ECHO_LEFT);
  delay(INTER_PING_MS);
  float dRight = medirDistancia(TRIG_RIGHT, ECHO_RIGHT);

  Serial.println("------ Lecturas de sensores (cm) ------");
  Serial.print("Frente: ");   Serial.print(dFront); Serial.print(" cm\t");
  Serial.print("Atras: ");    Serial.print(dBack);  Serial.println(" cm");
  Serial.print("Izquierda: ");Serial.print(dLeft);  Serial.print(" cm\t");
  Serial.print("Derecha: ");  Serial.print(dRight); Serial.println(" cm");
  Serial.println("---------------------------------------");

  bool peligro = (dFront < OBSTACLE_LIMIT) || (dBack < OBSTACLE_LIMIT) ||
                 (dLeft  < OBSTACLE_LIMIT) || (dRight< OBSTACLE_LIMIT);

  // Alerta (ON/OFF simple). Si tu driver admite PWM, puedo pasarlo a ledc.
  digitalWrite(PIN_VIB, peligro ? HIGH : LOW);

  if (dFront < OBSTACLE_LIMIT)  Serial.println("⚠  Obstáculo al FRENTE");
  if (dBack  < OBSTACLE_LIMIT)  Serial.println("⚠  Obstáculo ATRÁS");
  if (dLeft  < OBSTACLE_LIMIT)  Serial.println("⚠  Obstáculo a la IZQUIERDA");
  if (dRight < OBSTACLE_LIMIT)  Serial.println("⚠  Obstáculo a la DERECHA");
  if (!peligro)                 Serial.println("✅  Zona despejada.");

  Serial.println();
  delay(200);
}
